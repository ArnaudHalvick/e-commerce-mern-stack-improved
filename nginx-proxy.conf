# Main Nginx reverse proxy configuration
# This handles both domains with their respective SSL certificates

# Cache configuration
proxy_cache_path /var/cache/nginx/images levels=1:2 keys_zone=images_cache:10m max_size=1g inactive=60m;
proxy_cache_path /var/cache/nginx/admin levels=1:2 keys_zone=admin_cache:10m max_size=500m inactive=60m;

# Redirect HTTP to HTTPS for main domain
server {
    listen 80;
    server_name mernappshopper.xyz www.mernappshopper.xyz;
    
    location / {
        return 301 https://mernappshopper.xyz$request_uri;
    }
}

# Redirect HTTP to HTTPS for admin subdomain
server {
    listen 80;
    server_name admin.mernappshopper.xyz;
    
    location / {
        return 301 https://admin.mernappshopper.xyz$request_uri;
    }
}

# Redirect IP-based access to domain
server {
    listen 443 ssl;
    server_name 159.65.230.12;
    
    # Use the main domain certificate for IP-based access
    ssl_certificate /etc/ssl/mernappshopper.xyz/fullchain.pem;
    ssl_certificate_key /etc/ssl/mernappshopper.xyz/privkey.pem;
    
    # Redirect all requests to the domain
    return 301 https://mernappshopper.xyz$request_uri;
}

# Redirect www to non-www for main domain
server {
    listen 443 ssl;
    server_name www.mernappshopper.xyz;
    
    # Use the main domain certificate
    ssl_certificate /etc/ssl/mernappshopper.xyz/fullchain.pem;
    ssl_certificate_key /etc/ssl/mernappshopper.xyz/privkey.pem;
    
    # Redirect all requests to non-www version
    return 301 https://mernappshopper.xyz$request_uri;
}

# Main domain server block
server {
    listen 443 ssl;
    server_name mernappshopper.xyz;
    
    # SSL configuration with correct certificates for main domain
    ssl_certificate /etc/ssl/mernappshopper.xyz/fullchain.pem;
    ssl_certificate_key /etc/ssl/mernappshopper.xyz/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # CORS headers for main domain
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Vary Origin always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
    add_header Access-Control-Allow-Credentials "true" always;
    
    # Set longer timeouts for slow connections
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Increase buffer sizes 
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Enable gzip compression
    gzip on;
    gzip_types image/jpeg image/png image/svg+xml application/javascript application/json text/css;
    gzip_comp_level 6;
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 'Proxy-OK';
        add_header Content-Type text/plain;
    }
    
    # Forward all requests to the frontend container
    location / {
        proxy_pass http://frontend:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
    }
    
    # API requests get handled directly to avoid double proxying
    location /api/ {
        proxy_pass https://api:4443/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header Origin $http_origin;
        proxy_cache_bypass $http_upgrade;
        
        # Since we're using self-signed certificates internally
        proxy_ssl_verify off;
        
        # Handle CORS preflight
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            add_header 'Vary' 'Origin' always;
            return 204;
        }
    }
    
    # Images with caching
    location /images/ {
        proxy_pass https://api:4443/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Caching configuration
        proxy_cache images_cache;
        proxy_cache_valid 200 304 12h;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        
        # Since we're using self-signed certificates internally
        proxy_ssl_verify off;
    }
}

# Admin subdomain server block
server {
    listen 443 ssl;
    server_name admin.mernappshopper.xyz;
    
    # SSL configuration with correct certificates for admin subdomain
    ssl_certificate /etc/ssl/admin.mernappshopper.xyz/fullchain.pem;
    ssl_certificate_key /etc/ssl/admin.mernappshopper.xyz/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # DO NOT add global CORS headers here - they will be added in specific locations
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 'Admin-Proxy-OK';
        add_header Content-Type text/plain;
    }
    
    # Forward all admin requests to the admin container
    location / {
        proxy_pass http://admin:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
    }
    
    # API requests get handled directly to avoid double proxying
    location /api/ {
        # Use dedicated proxy pass for main domain API
        proxy_pass https://api:4443/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 443;
        # Important: Always pass the subdomain origin to maintain correct CORS
        proxy_set_header Origin https://admin.mernappshopper.xyz;
        proxy_cache_bypass $http_upgrade;
        
        # Since we're using self-signed certificates internally
        proxy_ssl_verify off;
        
        # Handle CORS preflight
        if ($request_method = 'OPTIONS') {
            # Only set CORS headers once with specific values for admin
            add_header 'Access-Control-Allow-Origin' 'https://admin.mernappshopper.xyz' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,auth-token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            add_header 'Vary' 'Origin' always;
            return 204;
        }
        
        # Remove existing proxy_hide_header directives here if any
        # Let the API set proper CORS headers, but we need to control them
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Allow-Methods;
        proxy_hide_header Access-Control-Allow-Headers;
        
        # Add our own headers for CORS for non-OPTIONS requests
        add_header 'Access-Control-Allow-Origin' 'https://admin.mernappshopper.xyz' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,auth-token' always;
        add_header 'Vary' 'Origin' always;
    }
    
    # Images with caching
    location /images/ {
        proxy_pass https://api:4443/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Caching configuration
        proxy_cache admin_cache;
        proxy_cache_valid 200 304 12h;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        
        # Since we're using self-signed certificates internally
        proxy_ssl_verify off;
    }
} 