# Cache configuration
proxy_cache_path /var/cache/nginx/images levels=1:2 keys_zone=images_cache:10m max_size=1g inactive=60m;
proxy_cache_path /var/cache/nginx/admin levels=1:2 keys_zone=admin_cache:10m max_size=500m inactive=60m;

# Redirect all HTTP requests to HTTPS
server {
    listen 80;
    server_name mernappshopper.xyz;
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# Redirect IP-based access to domain
server {
    listen 443 ssl;
    server_name 159.65.230.12;
    
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # Redirect all requests to the domain
    return 301 https://mernappshopper.xyz$request_uri;
}

# Redirect www to non-www
server {
    listen 443 ssl;
    server_name www.mernappshopper.xyz;
    
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # Redirect all requests to non-www version
    return 301 https://mernappshopper.xyz$request_uri;
}

# Main server block
server {
    listen 443 ssl;
    server_name mernappshopper.xyz;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # CORS headers - global for all locations
    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    
    # Root directory for static files
    root /usr/share/nginx/html;
    
    # Basic MIME types
    include /etc/nginx/mime.types;
    types {
        application/javascript js mjs;
        application/json json;
    }
    
    # Set longer timeouts for slow connections
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    
    # Increase buffer sizes for image transfers
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Enable gzip compression
    gzip on;
    gzip_types image/jpeg image/png image/svg+xml application/javascript application/json text/css;
    gzip_comp_level 6;
    
    # Add redirect for old admin-panel path
    location ^~ /admin-panel/ {
        rewrite ^/admin-panel/(.*) /admin/$1 permanent;
    }
    
    # Health check endpoint
    location = /health {
        access_log off;
        return 200 'OK';
        add_header Content-Type text/plain;
    }
    
    # API proxy - make sure this comes before the static asset locations
    location /api/ {
        proxy_pass https://api:4443/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Increase timeouts for API requests
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Since we're using self-signed certificates internally
        proxy_ssl_verify off;
    }
    
    # Images proxy with caching
    location /images/ {
        proxy_pass https://api:4443/images/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Caching configuration
        proxy_cache images_cache;
        proxy_cache_bypass $http_pragma $http_authorization;
        proxy_cache_valid 200 304 12h;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        
        # Since we're using self-signed certificates internally
        proxy_ssl_verify off;
        
        # If image not found, try a placeholder
        proxy_intercept_errors on;
        error_page 404 = /images/placeholders/product-placeholder-medium.png;
        
        # Handle OPTIONS requests for CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Admin app static assets - serve these first
    location ~* ^/admin/assets/.*\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        access_log off;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        try_files $uri =404;
    }
    
    # Admin app without trailing slash - redirect to admin with trailing slash
    location = /admin {
        return 301 $scheme://$host/admin/$is_args$args;
    }
    
    # Admin app SPA routing - handle all requests starting with /admin/
    location /admin/ {
        # Important: DO NOT use alias, use root with try_files
        try_files $uri $uri/ /admin/index.html;
        
        # No caching for HTML to ensure latest version
        add_header Cache-Control "no-cache, must-revalidate";
    }
    
    # Main frontend static assets
    location ~* ^/static/.*\.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        access_log off;
        expires 30d;
        add_header Cache-Control "public, max-age=2592000";
        try_files $uri =404;
    }
    
    # Main frontend SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        
        # No caching for HTML to ensure latest version
        add_header Cache-Control "no-cache, must-revalidate";
        
        # Handle OPTIONS requests for CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }
    
    # Redirect server error pages to static page
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

# Enable gzip compression for images
gzip on;
gzip_types image/jpeg image/png image/svg+xml;
gzip_comp_level 6; 