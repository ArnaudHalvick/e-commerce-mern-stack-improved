# ===== STAGE 1: Build main frontend =====
FROM node:18-alpine AS frontend-builder
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci
COPY frontend/ ./
ARG REACT_APP_API_URL=https://mernappshopper.xyz
ARG REACT_APP_STRIPE_PUBLISHABLE_KEY=STRIPE_PUBLISHABLE_KEY_PLACEHOLDER
ENV REACT_APP_API_URL=$REACT_APP_API_URL
ENV REACT_APP_STRIPE_PUBLISHABLE_KEY=$REACT_APP_STRIPE_PUBLISHABLE_KEY
ENV REACT_APP_DEFAULT_PROTOCOL=https
ENV REACT_APP_USE_HTTPS=true
RUN npm run build

# ===== STAGE 2: Build admin panel =====
FROM node:18-alpine AS admin-builder
WORKDIR /app/admin
COPY admin/package*.json ./
RUN npm ci
COPY admin/ ./
ARG VITE_API_URL=https://mernappshopper.xyz
ARG VITE_BASE_PATH=/admin
ENV VITE_API_URL=$VITE_API_URL
ENV VITE_ADMIN_API_PATH=/api/admin
ENV VITE_BASE_PATH=$VITE_BASE_PATH
# Log build info for debugging
RUN echo "Building admin with VITE_BASE_PATH=$VITE_BASE_PATH" && \
    npm run build

# ===== STAGE 3: Final nginx image =====
FROM nginx:alpine
# Copy built assets from both apps
COPY --from=frontend-builder /app/frontend/build/ /usr/share/nginx/html/
COPY --from=admin-builder /app/admin/dist/ /usr/share/nginx/html/admin/

# Copy nginx configuration
COPY frontend/nginx.conf /etc/nginx/conf.d/default.conf

# Create directory for SSL
RUN mkdir -p /etc/nginx/ssl

# Add entrypoint script
COPY frontend/docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Create config folder for runtime config
RUN mkdir -p /usr/share/nginx/html/admin/config
RUN echo "window.RUNTIME_CONFIG = { apiUrl: 'https://mernappshopper.xyz', basePath: '/admin' };" > /usr/share/nginx/html/admin/config/runtime-config.js
# Also place it directly in the /admin/ folder for direct access
RUN echo "window.RUNTIME_CONFIG = { apiUrl: 'https://mernappshopper.xyz', basePath: '/admin' };" > /usr/share/nginx/html/admin/runtime-config.js

EXPOSE 80 443
ENTRYPOINT ["/docker-entrypoint.sh"]
CMD ["nginx", "-g", "daemon off;"] 